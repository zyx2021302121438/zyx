import numpy as np
import pandas as pd
import networkx as nx
import matplotlib.pyplot as plt
from numpy import array
import os
import csv

# path1 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\议员数据\投票数据\20230926_voteview_50.xls'
# path2 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\议员数据\投票数据\vote_nodes50.txt'
# path3 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\议员数据\投票数据\vote_net50.txt'
# path4 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\议员数据\投票数据\vote_xs50_weight0.txt'
# path4 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\议员数据\投票数据\vote_xs50_0.txt'
# path5 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\议员数据\投票数据\emb50.txt'
# path6 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\议员数据\投票数据\vote_net50_w.txt'
path2 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\archive0\1429_goods.txt'
path3 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\购物\Magazine5\Magazine_net.txt'
path4 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\购物\Magazine5\Magazine_xs2.txt'
path5 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\投票\senate\senate_nodes.txt'
path6 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\购物\Magazine5\Magazine_w.txt'


def sign(x):
    y = 0
    if x == '6':
        y = -1
    elif x == '9':
        y = 0
    elif x == '1':
        y = 1
    return y


def xs(x, y, w):
    if len(x) == len(y) == len(w):
        num1 = 0
        num2 = 0
        for k in range(len(x)):
            num1 += x[k] * y[k] * w[k]
            num2 += abs(x[k] * y[k] * w[k])
        if num2 == 0:
            return 0
        else:
            return num1 / num2
    else:
        print('error')


def fh(x):
    if float(x) > 0:
        return 1
    else:
        return -1


'''数据处理'''
# with pd.ExcelFile(path1) as xlsx:
#     df1 = pd.read_excel(xlsx, 'Vote Matrix')
#     df2 = pd.read_excel(xlsx, 'Member Descriptions')
#     df3 = pd.read_excel(xlsx, 'Roll Call Descriptions')
# net = []
# person = []
# person1 = []
# vote = []
# for i in range(len(df1)):
#     for j in range(50):
#         net.append([df1.iloc[i, 2], j, str(df1.iloc[i, 4 + j])])
# for i in range(len(df2)):
#     person.append([df2.iloc[i, 5], df2.iloc[i, 6]])
#     person1.append(df2.iloc[i, 5])
# for i in range(len(df3)):
#     vote.append(df3.iloc[i, 1])
# f1 = open(path2, 'w', encoding='utf-8')
# for i in person:
#     f1.writelines([str(person.index(i)), '\t', str(i[0]), '\t', str(i[1]), '\n'])
# for i in vote:
#     f1.writelines(['1' + str(vote.index(i)).zfill(2), '\t', str(i), '\n'])
# f1.close()
# f2 = open(path3, 'w', encoding='utf-8')
# for i in net:
#     f2.writelines([str(person1.index(i[0])), '\t', '1' + str(i[1]).zfill(2), '\t', str(sign(i[2])), '\n'])
# f2.close()

'''相似度网络'''
# with open(path3, "r") as f:
#     data = f.readlines()
# with open(path6, "r") as f:
#     ww = f.readlines()
# w1 = []
# for i in ww:
#     w1.append(float(i[:-1]))
# N = 157
# # w1 = np.ones(N)
# dic = {}
# for i in data:
#     dic.setdefault(int(i.split('\t')[0]), np.zeros(N))
#     dic[int(i.split('\t')[0])][int(i.split('\t')[1])] = fh(i.split('\t')[2][:-1])
# dic0 = sorted(dic.items(), key=lambda item: item[0])
# net = []
# n = 0
# for i in range(len(dic0) - 1):
#     for j in range(i + 1, len(dic0)):
#         if xs(dic0[i][1], dic0[j][1], w1) >= 0 or xs(dic0[i][1], dic0[j][1], w1) <= -0.5:
#             net.append([dic0[i][0], dic0[j][0], xs(dic0[i][1], dic0[j][1], w1)])
# f = open(path4, 'w', encoding='utf-8')
# for i in net:
#     f.writelines([str(i[0]), '\t', str(i[1]), '\t', str(i[2]), '\n'])
# f.close()

'''txt转csv'''
path8 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\议员数据\投票数据\vote_xs50_0.txt'
path7 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\议员数据\投票数据\vote.txt'
with open(path8, "r") as f:
    name0 = f.readlines()
# weight1 = []
# weight2 = []
# for i in name0:
#     if float(i.split('\t')[2][:-1]) > 0:
#         weight1.append([i.split('\t')[0], i.split('\t')[1], float(i.split('\t')[2][:-1])])
#     elif float(i.split('\t')[2][:-1]) < 0:
#         weight2.append([i.split('\t')[0], i.split('\t')[1], float(i.split('\t')[2][:-1])])
# weight1.sort(key=lambda ax: ax[2], reverse=True)
# weight2.sort(key=lambda ax: ax[2])
# print(len(weight1), len(weight2))
# print(weight1)
# print(weight2)
# weight3 = []
# weight4 = []
# for i in range(10):
#     weight3.append(weight1[int(len(weight1) * (i + 1) / 10 - 1)])
#     weight4.append(weight2[int(len(weight2) * (i + 1) / 10 - 1)])
thing = []
# x = 0
# y = 0
# for i in name0:
#     if float(i.split('\t')[2][:-1]) > 0 and weight1.index([i.split('\t')[0], i.split('\t')[1], float(i.split('\t')[2][:-1])]) < len(weight1) * (k + 1) / 10:
#         thing.append([i.split('\t')[0], i.split('\t')[1], 1])
#         x += 1
#     elif float(i.split('\t')[2][:-1]) < 0 and weight2.index([i.split('\t')[0], i.split('\t')[1], float(i.split('\t')[2][:-1])]) < len(weight2) * (k + 1) / 10:
#         thing.append([i.split('\t')[0], i.split('\t')[1], -1])
#         y += 1
for i in name0:
    if float(i.split('\t')[2][:-1]) > 0.5:
        thing.append([int(i.split('\t')[0])-1, int(i.split('\t')[1])-1, 1])
    elif float(i.split('\t')[2][:-1]) < -0.5:
        thing.append([int(i.split('\t')[0])-1, int(i.split('\t')[1])-1, -1])
# print(len(thing), x, y)
with open(path7, 'w', newline='') as f:
    writer = csv.writer(f)
    for row in thing:
        writer.writerow(row)

'''构建网络'''
# nodeR = []
# nodeD = []
# nodeI = []
# nodeV = []
# sign1 = []
# name1 = []
# # pos = {'0': array([0.38762382, 0.54013014]), '18': array([0.53968763, 0.61383367]), '38': array([0.5090763 , 0.50061053]), '216': array([-0.87241763, -0.61252356]), '238': array([0.52246755, 0.52731037]), '259': array([0.48028618, 0.62633514]), '348': array([0.54329413, 0.51435721]), '366': array([0.6616087 , 0.42712325]), '387': array([0.57866132, 0.16090766]), '433': array([-0.87632483, -0.19276357]), '491': array([0.56362456, 0.47430801]), '511': array([0.63694179, 0.35084486]), '1': array([0.44123784, 0.11724927]), '43': array([0.49276981, 0.1421039 ]), '156': array([0.55573601, 0.22742316]), '184': array([ 0.55952221, -0.16747271]), '211': array([0.55987561, 0.12972331]), '229': array([0.51882106, 0.18973143]), '305': array([-0.69032013, -0.22407922]), '480': array([0.55003989, 0.16434941]), '2': array([-0.77333695,  0.08534443]), '8': array([-0.89597982, -0.06300366]), '11': array([-0.84137154,  0.23891102]), '40': array([-0.75149292,  0.07682575]), '56': array([-0.23561211, -0.024991  ]), '57': array([-0.72245198,  0.18327849]), '61': array([-0.74942714,  0.23573519]), '68': array([-0.87277228,  0.00306844]), '83': array([0.58974212, 0.42853531]), '84': array([-0.84116369,  0.03158782]), '96': array([-0.48369506, -0.09909105]), '111': array([-0.69459522, -0.17247079]), '116': array([-0.37345448,  0.00147289]), '131': array([-0.4827491 , -0.12320732]), '132': array([-0.65994114, -0.12715858]), '139': array([-0.89132673, -0.05055128]), '166': array([0.66040289, 0.09244362]), '169': array([ 0.58313262, -0.17808019]), '175': array([0.548549  , 0.03464476]), '183': array([-0.52124578, -0.05167396]), '187': array([0.56869918, 0.39900431]), '205': array([-0.73547864,  0.0196413 ]), '209': array([-0.75070381,  0.25010484]), '212': array([-0.34937483, -0.09108537]), '233': array([-0.80080986, -0.08453622]), '241': array([ 0.57205504, -0.1884049 ]), '246': array([-0.54171145, -0.09113204]), '263': array([-0.7432456 ,  0.04037708]), '266': array([-0.72905481,  0.21966855]), '268': array([-0.81653053, -0.03512001]), '283': array([-0.75835276, -0.0054843 ]), '284': array([-0.87031645, -0.08377163]), '291': array([-0.81110412,  0.169728  ]), '292': array([-0.7155807 ,  0.26749414]), '301': array([-0.85446745, -0.00730251]), '315': array([-0.66924483, -0.07275859]), '320': array([-0.73050725, -0.18290837]), '325': array([-0.79485697,  0.01030552]), '328': array([-0.65019274,  0.6383267 ]), '336': array([-0.70503014, -0.02384453]), '361': array([-0.73594981, -0.00916181]), '364': array([-0.70344657,  0.26619121]), '367': array([-0.92841661, -0.08678768]), '373': array([-0.69614655,  0.40682772]), '377': array([-0.75638813, -0.15063117]), '383': array([-8.84457886e-01, -8.71344178e-04]), '395': array([0.64916635, 0.09183338]), '398': array([-0.82303971, -0.09944113]), '425': array([-0.7733894 , -0.25554746]), '443': array([ 0.59085208, -0.34476256]), '447': array([-0.82626557,  0.15414239]), '451': array([-0.74018955,  0.25258163]), '452': array([-0.8274852 , -0.06081326]), '455': array([-0.82579488, -0.15343989]), '468': array([-0.84946269, -0.11495538]), '495': array([-0.88301992, -0.11844903]), '498': array([0.67304546, 0.04051681]), '3': array([ 0.42988449, -0.13648598]), '24': array([ 0.68071216, -0.09115604]), '162': array([ 0.55574518, -0.06921823]), '182': array([-0.25885937, -0.74225837]), '200': array([0.82008314, 0.02525385]), '310': array([0.65188915, 0.03970255]), '338': array([0.64303589, 0.10360686]), '389': array([0.66664535, 0.16605841]), '413': array([0.67326438, 0.24292944]), '504': array([ 0.56064367, -0.15114695]), '4': array([0.57614154, 0.1781234 ]), '5': array([0.40287447, 0.01559683]), '13': array([ 0.15903616, -0.07928459]), '20': array([0.42220545, 0.65340132]), '23': array([0.62809974, 0.14594418]), '30': array([0.55829644, 0.12425689]), '33': array([0.51969963, 0.5089286 ]), '36': array([0.59773064, 0.1810371 ]), '44': array([0.54753393, 0.12183489]), '45': array([0.57628387, 0.08066827]), '71': array([0.53714025, 0.02361934]), '77': array([0.57117206, 0.17853886]), '89': array([0.64045101, 0.10949403]), '99': array([0.46801355, 0.15199009]), '105': array([0.59866029, 0.42601827]), '107': array([0.5699662 , 0.10252704]), '117': array([0.58051461, 0.1463158 ]), '120': array([0.49156961, 0.02634731]), '122': array([0.47899112, 0.18623361]), '125': array([-0.77351987, -0.1658109 ]), '126': array([ 0.57191873, -0.00651237]), '127': array([ 0.46442848, -0.02087932]), '133': array([ 0.35992354, -0.0200428 ]), '137': array([0.53126287, 0.37426099]), '148': array([ 0.59211606, -0.24049649]), '153': array([0.6267373 , 0.29116383]), '160': array([0.65793043, 0.2029894 ]), '177': array([0.38226599, 0.06701573]), '180': array([0.53534758, 0.13013498]), '190': array([0.61542577, 0.08007668]), '193': array([0.55482972, 0.11547308]), '197': array([0.64966357, 0.16484974]), '206': array([0.36839119, 0.04476493]), '213': array([0.57191986, 0.12844066]), '221': array([0.55991071, 0.20289049]), '232': array([ 0.57087016, -0.04558979]), '234': array([0.56891823, 0.15482835]), '242': array([0.46980277, 0.04350178]), '269': array([-0.67236918, -0.05157946]), '277': array([0.56074739, 0.16461685]), '318': array([ 0.60005599, -0.01008146]), '323': array([0.7632494 , 0.29929373]), '332': array([0.61591911, 0.32105929]), '341': array([0.47722709, 0.12412862]), '355': array([0.51633114, 0.09436203]), '357': array([-0.81904417, -0.18987429]), '371': array([0.50783533, 0.12216884]), '402': array([ 0.54934818, -0.17974509]), '427': array([0.53606403, 0.00572293]), '430': array([ 0.54035902, -0.07183173]), '432': array([0.52747411, 0.16061491]), '434': array([0.43415189, 0.2651785 ]), '450': array([0.54151833, 0.27443805]), '460': array([0.64666331, 0.23771134]), '474': array([0.70540524, 0.07566613]), '487': array([0.48357135, 0.19153342]), '494': array([0.57000732, 0.16272216]), '503': array([0.5351792 , 0.11504127]), '67': array([0.56672072, 0.07210135]), '75': array([0.52371198, 0.07907674]), '322': array([ 0.63475096, -0.11581562]), '335': array([ 0.68201703, -0.21500558]), '410': array([0.63918453, 0.08870139]), '514': array([0.58393157, 0.11152914]), '6': array([-0.85314572, -0.27949393]), '16': array([-0.85780317, -0.35701561]), '39': array([-0.88953567, -0.2961255 ]), '54': array([-0.80292684, -0.28778043]), '73': array([-0.8587842 , -0.28393394]), '78': array([-0.96342123, -0.20688669]), '86': array([0.74519551, 0.04712373]), '90': array([-0.83240283, -0.3449032 ]), '95': array([-0.77443504, -0.22286861]), '108': array([-0.85922438, -0.24275185]), '123': array([-0.96357214, -0.20355256]), '135': array([-0.7500754 , -0.38927689]), '163': array([-0.89665771, -0.17262618]), '178': array([-0.78455794, -0.4428466 ]), '186': array([-0.80976397, -0.25453216]), '189': array([-0.84416562, -0.23001961]), '219': array([-0.83333999, -0.30370086]), '224': array([0.58676076, 0.15742187]), '228': array([-0.89878029, -0.18362755]), '236': array([-0.86402225, -0.18064903]), '247': array([-0.84461665, -0.3906593 ]), '248': array([-0.84412462, -0.41285786]), '261': array([-0.73823339, -0.55208457]), '270': array([-0.83587641, -0.15178406]), '275': array([-0.83223355, -0.3156696 ]), '288': array([-0.76742738, -0.43557611]), '296': array([-0.87187272, -0.25485098]), '309': array([-0.7800709 , -0.64418864]), '324': array([-0.9002291 , -0.20843327]), '329': array([-0.77974582, -0.59639657]), '337': array([-0.92565173, -0.13942792]), '375': array([-0.84027445, -0.19133377]), '384': array([-0.87388688, -0.39560321]), '385': array([-0.74368882, -0.48897183]), '399': array([-0.80775917, -0.34382269]), '409': array([-0.89434081, -0.25049317]), '440': array([-0.92727768, -0.13303243]), '457': array([-0.79376483, -0.30896169]), '470': array([-0.89394099, -0.12518397]), '492': array([-0.80567217, -0.30001584]), '510': array([-0.72477758, -0.57825083]), '7': array([0.49570999, 0.12577088]), '10': array([0.31284371, 0.06117548]), '19': array([0.55975795, 0.08874848]), '27': array([0.55862164, 0.08630221]), '104': array([0.44809684, 0.03604938]), '109': array([0.48336157, 0.29603794]), '138': array([ 0.63970184, -0.27187452]), '146': array([0.50541818, 0.06445163]), '179': array([0.56695706, 0.23576097]), '199': array([0.48120725, 0.11717936]), '202': array([0.54979879, 0.30463186]), '253': array([0.52939349, 0.05353485]), '271': array([0.2964493 , 0.13324313]), '274': array([0.50258327, 0.11891497]), '297': array([0.55214548, 0.21318096]), '350': array([0.71272552, 0.11344901]), '374': array([ 0.57590628, -0.0697023 ]), '401': array([0.51520044, 0.06777009]), '435': array([0.3068181 , 0.16681269]), '461': array([0.17413567, 0.04360601]), '464': array([0.46157041, 0.120464  ]), '14': array([-0.86417371, -0.21049049]), '31': array([-0.92939472, -0.54967117]), '35': array([0.61683613, 0.27798212]), '42': array([-0.93408787, -0.21105291]), '46': array([-0.88184363, -0.13268335]), '49': array([-0.80835092, -0.28308412]), '55': array([-0.88789481, -0.22269689]), '87': array([ 0.58788997, -0.038909  ]), '91': array([0.62047315, 0.22365503]), '98': array([-0.85995293, -0.1798467 ]), '103': array([0.7163201 , 0.27902809]), '110': array([-0.79558885, -0.30772847]), '113': array([0.59994984, 0.17589834]), '114': array([0.7290659 , 0.20979269]), '115': array([0.73861545, 0.10591198]), '130': array([0.54707128, 0.4865728 ]), '136': array([0.62948352, 0.25684863]), '142': array([0.66199046, 0.09362815]), '147': array([0.66868228, 0.15659483]), '150': array([-0.81950039, -0.25695077]), '154': array([0.6408115 , 0.12327424]), '170': array([0.60993242, 0.22405222]), '173': array([0.56722939, 0.30680668]), '198': array([0.58313662, 0.13431799]), '201': array([-0.78207028, -0.24120067]), '214': array([0.74716151, 0.19334446]), '220': array([-0.82375133, -0.43121964]), '223': array([0.76100308, 0.02258908]), '235': array([-0.78002459, -0.26114771]), '239': array([-0.8519159 , -0.17597915]), '244': array([0.6268208 , 0.09765479]), '249': array([-0.09372255,  0.38889948]), '251': array([0.5978961 , 0.14546342]), '254': array([0.66469246, 0.22204424]), '265': array([0.59630215, 0.10876669]), '267': array([0.64092034, 0.13856429]), '273': array([-0.91395658,  0.0954638 ]), '278': array([-0.77883458, -0.23580374]), '280': array([ 0.73839033, -0.08076872]), '281': array([0.47547901, 0.2686505 ]), '285': array([0.55574864, 0.10016785]), '290': array([-0.88162851, -0.43974617]), '295': array([0.67653894, 0.15408406]), '300': array([-0.89537835, -0.14214207]), '302': array([ 0.53216493, -0.36344078]), '303': array([-0.89110363, -0.25629169]), '308': array([ 0.75186843, -0.05244206]), '311': array([-0.80267191, -0.10507166]), '312': array([-0.94814658, -0.250586  ]), '313': array([-0.8870427 , -0.07520522]), '316': array([-0.96530831, -0.15024851]), '317': array([-0.86656076, -0.15973403]), '326': array([-1.        ,  0.03903648]), '327': array([0.61335498, 0.19430518]), '330': array([-0.80770952, -0.19571131]), '331': array([ 0.51179481, -0.38665661]), '343': array([-0.93666708, -0.1134461 ]), '351': array([0.75562406, 0.01432719]), '352': array([0.66225398, 0.24989535]), '358': array([0.67613256, 0.09470308]), '369': array([0.69357407, 0.17938605]), '370': array([-0.81157178,  0.05213052]), '379': array([-0.91139436, -0.17084563]), '388': array([-0.7752068 , -0.24695462]), '396': array([0.54146385, 0.13847019]), '403': array([-0.80619651, -0.22997521]), '419': array([-0.90428197, -0.23294656]), '428': array([-0.75731856, -0.73180491]), '439': array([-0.80610186, -0.23842478]), '441': array([-0.91920328, -0.18287504]), '444': array([0.57137394, 0.40388969]), '459': array([-0.90893894, -0.23254375]), '466': array([-0.98204535, -0.03191818]), '475': array([-0.79889154, -0.29116058]), '477': array([-0.80952907, -0.19861281]), '478': array([-0.79578292, -0.30278796]), '493': array([ 0.56020832, -0.12832777]), '505': array([-0.66182208,  0.2641955 ]), '508': array([-0.8479023 , -0.21693678]), '513': array([-0.8739664 , -0.21023485]), '9': array([ 0.14830659, -0.1821501 ]), '240': array([0.1878733 , 0.07717817]), '405': array([-0.15810429, -0.85176194]), '161': array([ 0.45456889, -0.04079054]), '344': array([0.34217432, 0.0625006 ]), '378': array([0.38263479, 0.19518304]), '490': array([-0.25113094, -0.03423458]), '499': array([ 0.27392727, -0.05026377]), '502': array([ 0.16686447, -0.05159955]), '65': array([ 0.63635337, -0.23904516]), '66': array([0.59224862, 0.02712218]), '93': array([-0.50988674, -0.02562675]), '258': array([ 0.58910501, -0.05462158]), '390': array([ 0.55544293, -0.06079266]), '408': array([ 0.11209938, -0.05632037]), '416': array([0.56710899, 0.1857252 ]), '449': array([ 0.58765256, -0.08706155]), '465': array([ 0.64448315, -0.05029189]), '501': array([ 0.65356904, -0.17847955]), '12': array([0.69837219, 0.38247013]), '222': array([0.57555425, 0.51862913]), '349': array([0.60843968, 0.51760656]), '362': array([-0.80335689, -0.58584487]), '141': array([ 0.28244472, -0.27413145]), '262': array([ 0.29402459, -0.12112726]), '282': array([ 0.07597987, -0.74250865]), '293': array([0.17514929, 0.05919844]), '380': array([-0.75101781, -0.12845933]), '392': array([-0.40710291, -0.05333431]), '489': array([ 0.61152047, -0.12683253]), '195': array([ 0.68091887, -0.00345874]), '404': array([0.54181165, 0.47252026]), '15': array([0.40515345, 0.20964742]), '50': array([-0.69252455, -0.81661159]), '51': array([-0.78798944, -0.67849541]), '60': array([-0.68513423, -0.68632394]), '76': array([-0.83974367, -0.41954622]), '92': array([-0.77628863, -0.36590362]), '94': array([0.59768146, 0.35646167]), '118': array([-0.82275844, -0.300374  ]), '121': array([0.73565942, 0.09261201]), '151': array([-0.91144276, -0.33009523]), '152': array([-0.14316855,  0.04115109]), '176': array([0.67503279, 0.38038999]), '191': array([0.68072414, 0.19702251]), '243': array([-0.83562785, -0.6036768 ]), '294': array([0.60871226, 0.40702352]), '319': array([-0.84191406, -0.37156966]), '407': array([0.70275974, 0.25536561]), '458': array([0.54277408, 0.34296453]), '467': array([-0.89073092, -0.32518861]), '486': array([0.54073018, 0.32707405]), '512': array([-0.78340989, -0.47628132]), '17': array([0.58467484, 0.3386232 ]), '28': array([0.28819939, 0.86858374]), '59': array([0.57777053, 0.49812588]), '88': array([-0.80731118, -0.42577466]), '119': array([0.56698781, 0.33042046]), '149': array([0.5660376 , 0.43307862]), '207': array([0.24224021, 0.06957866]), '227': array([0.36103925, 0.31785011]), '353': array([0.55200899, 0.37845892]), '376': array([0.58512998, 0.45280612]), '423': array([0.58707672, 0.58402419]), '424': array([-0.63134408, -0.44900364]), '448': array([0.62185246, 0.24412867]), '454': array([0.64133942, 0.447543  ]), '463': array([0.45224518, 0.4045715 ]), '483': array([0.47573388, 0.32825387]), '509': array([-0.81018507, -0.512546  ]), '26': array([-0.72542757, -0.63286525]), '52': array([-0.58608276, -0.57997048]), '81': array([0.5128094 , 0.51263994]), '167': array([0.6169889 , 0.43187121]), '215': array([-0.6230135 , -0.57133627]), '334': array([-0.6940273 , -0.70460439]), '342': array([-0.75207269, -0.71530503]), '354': array([0.38707864, 0.47781196]), '420': array([0.49097073, 0.72104758]), '426': array([-0.73499036, -0.59290403]), '429': array([0.59560972, 0.78911042]), '445': array([-0.63122833, -0.89756906]), '446': array([-0.71474528, -0.56367767]), '485': array([0.43050739, 0.76224476]), '506': array([-0.84514344, -0.64675331]), '100': array([0.68987072, 0.10591242]), '172': array([-0.02737139,  0.73370844]), '181': array([0.57474285, 0.04091354]), '340': array([0.67407066, 0.15359215]), '347': array([0.65552062, 0.02441612]), '382': array([0.64227951, 0.17755847]), '422': array([0.64233559, 0.1793431 ]), '437': array([0.58737326, 0.29747617]), '64': array([0.51310927, 0.46875063]), '85': array([-0.78320801, -0.38161877]), '112': array([0.51728225, 0.32490343]), '144': array([0.42870969, 0.43997416]), '168': array([-0.49604645, -0.61141133]), '171': array([-0.70505595, -0.58501381]), '174': array([0.50630134, 0.45251614]), '231': array([0.47985983, 0.42271924]), '272': array([0.58312935, 0.39847669]), '279': array([-0.74057275, -0.46038443]), '345': array([-0.7852999 , -0.66971135]), '391': array([ 0.54801917, -0.05273676]), '400': array([0.58685184, 0.30873069]), '411': array([0.55928272, 0.42988193]), '417': array([0.55508882, 0.45457059]), '456': array([0.51825202, 0.41923031]), '481': array([-0.87091553, -0.27061632]), '496': array([0.60526121, 0.11834363]), '497': array([0.51639658, 0.21539462]), '21': array([0.55079919, 0.50944096]), '22': array([0.60734749, 0.75647026]), '306': array([-0.63820761, -0.64389724]), '314': array([-0.5669241 , -0.52536696]), '359': array([0.10013883, 0.07682078]), '276': array([-0.49414012, -0.74993688]), '289': array([-0.84582078, -0.51057708]), '418': array([0.5349071 , 0.57521844]), '469': array([-0.77503264, -0.58381146]), '62': array([0.61043954, 0.00995994]), '74': array([0.54670262, 0.17343907]), '158': array([0.62975854, 0.04328213]), '255': array([0.12449801, 0.12322126]), '473': array([0.57024264, 0.09931074]), '363': array([0.27251735, 0.01125416]), '25': array([ 0.08019619, -0.02282236]), '41': array([0.40071973, 0.57319748]), '72': array([-0.38140216, -0.3784028 ]), '102': array([0.39348671, 0.5918324 ]), '203': array([-0.67032546, -0.67390937]), '333': array([-0.36033335, -0.74102849]), '245': array([0.50185955, 0.46234205]), '264': array([-0.64021415, -0.5575034 ]), '286': array([-0.63178486, -0.56406277]), '321': array([-0.82330918, -0.53101671]), '346': array([-0.78132617, -0.57311296]), '393': array([-0.81235784, -0.5448187 ]), '462': array([-0.66993243, -0.57922435]), '29': array([ 0.41791275, -0.03917278]), '80': array([0.48634768, 0.06602443]), '97': array([0.47423601, 0.0811514 ]), '134': array([0.48583654, 0.14130463]), '218': array([ 0.58347428, -0.12682235]), '230': array([0.47430611, 0.07726713]), '256': array([0.45761096, 0.0230067 ]), '386': array([0.50202888, 0.03940015]), '394': array([ 0.59088546, -0.01716257]), '406': array([0.53597426, 0.09561567]), '436': array([0.46423501, 0.1053226 ]), '507': array([0.52880466, 0.1543171 ]), '32': array([-0.02432217, -0.91826046]), '69': array([-0.81957603, -0.23141761]), '194': array([-0.06896747,  0.42149913]), '365': array([-0.22219624,  0.2291695 ]), '47': array([0.43561941, 0.01431862]), '145': array([-0.09603523,  0.05852872]), '479': array([0.5215283 , 0.11380833]), '217': array([0.58354825, 0.07930713]), '298': array([0.40118697, 0.12550503]), '129': array([-0.73188168, -0.45704713]), '257': array([-0.76109743, -0.54184347]), '307': array([0.57475978, 0.54830188]), '431': array([0.54223347, 0.44825462]), '482': array([-0.41653499, -0.1928367 ]), '63': array([0.53935754, 0.13381958]), '124': array([0.31044215, 0.12205215]), '34': array([-0.8814916 , -0.58480614]), '53': array([0.52079546, 0.48867992]), '192': array([0.52293295, 0.51184821]), '143': array([0.46264297, 0.52889854]), '356': array([-0.61986744, -0.5001418 ]), '287': array([0.4168227 , 0.59652507]), '381': array([0.54997623, 0.1234979 ]), '412': array([0.17402942, 0.18256901]), '37': array([0.57916176, 0.42764044]), '164': array([-0.13953657, -0.17725524]), '368': array([-0.36934024, -0.89013773]), '70': array([0.5318802 , 0.16630262]), '106': array([-0.37224713, -0.03257523]), '48': array([-0.31923684, -0.05330843]), '159': array([-0.30716127, -0.03476517]), '260': array([-0.24676724, -0.03828939]), '438': array([-0.24404874, -0.01395893]), '442': array([-0.21900876, -0.04349576]), '484': array([-0.29175028, -0.39469644]), '471': array([0.51408523, 0.52866757]), '185': array([0.46521819, 0.42285362]), '237': array([0.49619234, 0.47588673]), '488': array([0.41828102, 0.35382164]), '500': array([0.48099017, 0.41679695]), '339': array([-0.78280044, -0.30605829]), '58': array([0.25497136, 0.20217679]), '299': array([0.53677344, 0.51454133]), '204': array([-0.85932177,  0.0179286 ]), '210': array([-0.39165193, -0.24240357]), '372': array([0.54573029, 0.2236432 ]), '252': array([-0.417541  , -0.27984059]), '414': array([-0.66051978, -0.52369273]), '165': array([0.74528342, 0.04334579]), '79': array([0.44713736, 0.61377752]), '101': array([0.49030656, 0.47609144]), '196': array([0.20244959, 0.76137799]), '415': array([-0.53160268, -0.63243937]), '82': array([-0.59157646, -0.48626897]), '208': array([-0.0608081 , -0.24042003]), '250': array([0.06228257, 0.05660887]), '188': array([ 0.45999771, -0.16641538]), '226': array([-0.24292302,  0.01856659]), '476': array([-0.35972312,  0.00549883]), '472': array([ 0.48551342, -0.00645156]), '155': array([0.50443566, 0.43611386]), '140': array([0.27971247, 0.52872133]), '128': array([0.64046144, 0.33433557]), '157': array([ 0.27293724, -0.64588296]), '421': array([ 0.25495848, -0.26977089]), '304': array([0.57523048, 0.45313036]), '453': array([-0.4205099 ,  0.27665702]), '397': array([ 0.38861158, -0.02250502]), '225': array([-0.64843684, -0.41231087]), '360': array([-0.20855887,  0.49096301])}
# # with open(path5, "r") as f:
# #     emb = f.readlines()
# # dic = {1: '0', 2: '1', 3: '6', 4: '14', 5: '16', 6: '18', 7: '19', 8: '20', 9: '22', 10: '29', 11: '30', 12: '36', 13: '38', 14: '39', 15: '41', 16: '42', 17: '44', 18: '49', 19: '51', 20: '55', 21: '56', 22: '58', 23: '65', 24: '67', 25: '68', 26: '69', 27: '72', 28: '74', 29: '76', 30: '78', 31: '79', 32: '83', 33: '87', 34: '89', 35: '93', 36: '94', 37: '7', 38: '8', 39: '27', 40: '34', 41: '46', 42: '60', 43: '91', 44: '95', 45: '2', 46: '3', 47: '4', 48: '5', 49: '9', 50: '10', 51: '11', 52: '12', 53: '13', 54: '15', 55: '17', 56: '21', 57: '23', 58: '24', 59: '25', 60: '26', 61: '28', 62: '31', 63: '32', 64: '33', 65: '35', 66: '37', 67: '40', 68: '43', 69: '47', 70: '48', 71: '50', 72: '53', 73: '54', 74: '57', 75: '59', 76: '61', 77: '62', 78: '64', 79: '70', 80: '73', 81: '75', 82: '77', 83: '80', 84: '81', 85: '82', 86: '84', 87: '85', 88: '86', 89: '88', 90: '90', 91: '92', 92: '97', 93: '98', 94: '52', 95: '63', 96: '66', 97: '96', 98: '71', 99: '45'}
# # for i in range(1, 100):
# #     pos[dic[i]] = [float(emb[i].split('\t')[0]), float(emb[i].split('\t')[1][:-1])]
# # with open(path5, "r") as f:
# #     data = f.readlines()
# # for i in range(len(data)):
# #     nodeR.append(float(data[i].split('\t')[2][:-1]))
#     # nodeR.append(pos[str(i)][0])
# # for i in range(len(data)):
# #     sign1.append(data[i].split('\t'))
# # # # for i in range(100, 114):
# # # #     nodeV.append(data[i].split('\t')[0])
# # for i in range(len(data)):
# #     if data[i] == '1\n':
# #         nodeD.append(str(i))
# #     elif data[i] == '0\n':
# #         nodeR.append(str(i))
#     # elif i[2] == '328\n':
#     #     nodeI.append(str(int(i[0])))
# # nodeR = np.zeros(515)
# # path11 = r'C:\Users\YHR\Desktop\YHR\硕士\符号网络\数据\购物\Magazine5\C1.csv'
# # cf = pd.read_csv(path11, header=None)
# # for i in range(len(cf)):
# #     sign1.append(list(cf.loc[i]).index(max(list(cf.loc[i]))))
# G = nx.read_edgelist(path4, nodetype=str, data=(("weight", float),))
# edgep = [(u, v) for (u, v, d) in G.edges(data=True) if d['weight'] > 0]
# edgen = [(u, v) for (u, v, d) in G.edges(data=True) if d['weight'] < 0]
# pos = nx.spring_layout(G)
# # print(pos)
# # nx.draw_networkx_nodes(G, pos, nodelist=nodeR, node_size=50, node_color='#8B0000')
# # nx.draw_networkx_nodes(G, pos, nodelist=nodeD, node_size=50, node_color='#00008B')
# # nx.draw_networkx_nodes(G, pos, nodelist=nodeI, node_size=10, node_color='black')
# # nodes = nx.draw_networkx_nodes(G, pos, node_size=50, node_color=sign1, cmap='viridis', vmin=0, vmax=2)
# nodes = nx.draw_networkx_nodes(G, pos, node_size=50)
# # labels = nx.draw_networkx_labels(G, pos)
# nx.draw_networkx_edges(G, pos, edgelist=edgep, width=0.1, edge_color='green')
# nx.draw_networkx_edges(G, pos, edgelist=edgen, width=0.1, edge_color='red')
# # cbar = plt.colorbar(nodes)
# # cbar.set_label('Node Values')
# plt.show()

'''社区标注'''
# pos = {'0': array([0.38762382, 0.54013014]), '18': array([0.53968763, 0.61383367]), '38': array([0.5090763 , 0.50061053]), '216': array([-0.87241763, -0.61252356]), '238': array([0.52246755, 0.52731037]), '259': array([0.48028618, 0.62633514]), '348': array([0.54329413, 0.51435721]), '366': array([0.6616087 , 0.42712325]), '387': array([0.57866132, 0.16090766]), '433': array([-0.87632483, -0.19276357]), '491': array([0.56362456, 0.47430801]), '511': array([0.63694179, 0.35084486]), '1': array([0.44123784, 0.11724927]), '43': array([0.49276981, 0.1421039 ]), '156': array([0.55573601, 0.22742316]), '184': array([ 0.55952221, -0.16747271]), '211': array([0.55987561, 0.12972331]), '229': array([0.51882106, 0.18973143]), '305': array([-0.69032013, -0.22407922]), '480': array([0.55003989, 0.16434941]), '2': array([-0.77333695,  0.08534443]), '8': array([-0.89597982, -0.06300366]), '11': array([-0.84137154,  0.23891102]), '40': array([-0.75149292,  0.07682575]), '56': array([-0.23561211, -0.024991  ]), '57': array([-0.72245198,  0.18327849]), '61': array([-0.74942714,  0.23573519]), '68': array([-0.87277228,  0.00306844]), '83': array([0.58974212, 0.42853531]), '84': array([-0.84116369,  0.03158782]), '96': array([-0.48369506, -0.09909105]), '111': array([-0.69459522, -0.17247079]), '116': array([-0.37345448,  0.00147289]), '131': array([-0.4827491 , -0.12320732]), '132': array([-0.65994114, -0.12715858]), '139': array([-0.89132673, -0.05055128]), '166': array([0.66040289, 0.09244362]), '169': array([ 0.58313262, -0.17808019]), '175': array([0.548549  , 0.03464476]), '183': array([-0.52124578, -0.05167396]), '187': array([0.56869918, 0.39900431]), '205': array([-0.73547864,  0.0196413 ]), '209': array([-0.75070381,  0.25010484]), '212': array([-0.34937483, -0.09108537]), '233': array([-0.80080986, -0.08453622]), '241': array([ 0.57205504, -0.1884049 ]), '246': array([-0.54171145, -0.09113204]), '263': array([-0.7432456 ,  0.04037708]), '266': array([-0.72905481,  0.21966855]), '268': array([-0.81653053, -0.03512001]), '283': array([-0.75835276, -0.0054843 ]), '284': array([-0.87031645, -0.08377163]), '291': array([-0.81110412,  0.169728  ]), '292': array([-0.7155807 ,  0.26749414]), '301': array([-0.85446745, -0.00730251]), '315': array([-0.66924483, -0.07275859]), '320': array([-0.73050725, -0.18290837]), '325': array([-0.79485697,  0.01030552]), '328': array([-0.65019274,  0.6383267 ]), '336': array([-0.70503014, -0.02384453]), '361': array([-0.73594981, -0.00916181]), '364': array([-0.70344657,  0.26619121]), '367': array([-0.92841661, -0.08678768]), '373': array([-0.69614655,  0.40682772]), '377': array([-0.75638813, -0.15063117]), '383': array([-8.84457886e-01, -8.71344178e-04]), '395': array([0.64916635, 0.09183338]), '398': array([-0.82303971, -0.09944113]), '425': array([-0.7733894 , -0.25554746]), '443': array([ 0.59085208, -0.34476256]), '447': array([-0.82626557,  0.15414239]), '451': array([-0.74018955,  0.25258163]), '452': array([-0.8274852 , -0.06081326]), '455': array([-0.82579488, -0.15343989]), '468': array([-0.84946269, -0.11495538]), '495': array([-0.88301992, -0.11844903]), '498': array([0.67304546, 0.04051681]), '3': array([ 0.42988449, -0.13648598]), '24': array([ 0.68071216, -0.09115604]), '162': array([ 0.55574518, -0.06921823]), '182': array([-0.25885937, -0.74225837]), '200': array([0.82008314, 0.02525385]), '310': array([0.65188915, 0.03970255]), '338': array([0.64303589, 0.10360686]), '389': array([0.66664535, 0.16605841]), '413': array([0.67326438, 0.24292944]), '504': array([ 0.56064367, -0.15114695]), '4': array([0.57614154, 0.1781234 ]), '5': array([0.40287447, 0.01559683]), '13': array([ 0.15903616, -0.07928459]), '20': array([0.42220545, 0.65340132]), '23': array([0.62809974, 0.14594418]), '30': array([0.55829644, 0.12425689]), '33': array([0.51969963, 0.5089286 ]), '36': array([0.59773064, 0.1810371 ]), '44': array([0.54753393, 0.12183489]), '45': array([0.57628387, 0.08066827]), '71': array([0.53714025, 0.02361934]), '77': array([0.57117206, 0.17853886]), '89': array([0.64045101, 0.10949403]), '99': array([0.46801355, 0.15199009]), '105': array([0.59866029, 0.42601827]), '107': array([0.5699662 , 0.10252704]), '117': array([0.58051461, 0.1463158 ]), '120': array([0.49156961, 0.02634731]), '122': array([0.47899112, 0.18623361]), '125': array([-0.77351987, -0.1658109 ]), '126': array([ 0.57191873, -0.00651237]), '127': array([ 0.46442848, -0.02087932]), '133': array([ 0.35992354, -0.0200428 ]), '137': array([0.53126287, 0.37426099]), '148': array([ 0.59211606, -0.24049649]), '153': array([0.6267373 , 0.29116383]), '160': array([0.65793043, 0.2029894 ]), '177': array([0.38226599, 0.06701573]), '180': array([0.53534758, 0.13013498]), '190': array([0.61542577, 0.08007668]), '193': array([0.55482972, 0.11547308]), '197': array([0.64966357, 0.16484974]), '206': array([0.36839119, 0.04476493]), '213': array([0.57191986, 0.12844066]), '221': array([0.55991071, 0.20289049]), '232': array([ 0.57087016, -0.04558979]), '234': array([0.56891823, 0.15482835]), '242': array([0.46980277, 0.04350178]), '269': array([-0.67236918, -0.05157946]), '277': array([0.56074739, 0.16461685]), '318': array([ 0.60005599, -0.01008146]), '323': array([0.7632494 , 0.29929373]), '332': array([0.61591911, 0.32105929]), '341': array([0.47722709, 0.12412862]), '355': array([0.51633114, 0.09436203]), '357': array([-0.81904417, -0.18987429]), '371': array([0.50783533, 0.12216884]), '402': array([ 0.54934818, -0.17974509]), '427': array([0.53606403, 0.00572293]), '430': array([ 0.54035902, -0.07183173]), '432': array([0.52747411, 0.16061491]), '434': array([0.43415189, 0.2651785 ]), '450': array([0.54151833, 0.27443805]), '460': array([0.64666331, 0.23771134]), '474': array([0.70540524, 0.07566613]), '487': array([0.48357135, 0.19153342]), '494': array([0.57000732, 0.16272216]), '503': array([0.5351792 , 0.11504127]), '67': array([0.56672072, 0.07210135]), '75': array([0.52371198, 0.07907674]), '322': array([ 0.63475096, -0.11581562]), '335': array([ 0.68201703, -0.21500558]), '410': array([0.63918453, 0.08870139]), '514': array([0.58393157, 0.11152914]), '6': array([-0.85314572, -0.27949393]), '16': array([-0.85780317, -0.35701561]), '39': array([-0.88953567, -0.2961255 ]), '54': array([-0.80292684, -0.28778043]), '73': array([-0.8587842 , -0.28393394]), '78': array([-0.96342123, -0.20688669]), '86': array([0.74519551, 0.04712373]), '90': array([-0.83240283, -0.3449032 ]), '95': array([-0.77443504, -0.22286861]), '108': array([-0.85922438, -0.24275185]), '123': array([-0.96357214, -0.20355256]), '135': array([-0.7500754 , -0.38927689]), '163': array([-0.89665771, -0.17262618]), '178': array([-0.78455794, -0.4428466 ]), '186': array([-0.80976397, -0.25453216]), '189': array([-0.84416562, -0.23001961]), '219': array([-0.83333999, -0.30370086]), '224': array([0.58676076, 0.15742187]), '228': array([-0.89878029, -0.18362755]), '236': array([-0.86402225, -0.18064903]), '247': array([-0.84461665, -0.3906593 ]), '248': array([-0.84412462, -0.41285786]), '261': array([-0.73823339, -0.55208457]), '270': array([-0.83587641, -0.15178406]), '275': array([-0.83223355, -0.3156696 ]), '288': array([-0.76742738, -0.43557611]), '296': array([-0.87187272, -0.25485098]), '309': array([-0.7800709 , -0.64418864]), '324': array([-0.9002291 , -0.20843327]), '329': array([-0.77974582, -0.59639657]), '337': array([-0.92565173, -0.13942792]), '375': array([-0.84027445, -0.19133377]), '384': array([-0.87388688, -0.39560321]), '385': array([-0.74368882, -0.48897183]), '399': array([-0.80775917, -0.34382269]), '409': array([-0.89434081, -0.25049317]), '440': array([-0.92727768, -0.13303243]), '457': array([-0.79376483, -0.30896169]), '470': array([-0.89394099, -0.12518397]), '492': array([-0.80567217, -0.30001584]), '510': array([-0.72477758, -0.57825083]), '7': array([0.49570999, 0.12577088]), '10': array([0.31284371, 0.06117548]), '19': array([0.55975795, 0.08874848]), '27': array([0.55862164, 0.08630221]), '104': array([0.44809684, 0.03604938]), '109': array([0.48336157, 0.29603794]), '138': array([ 0.63970184, -0.27187452]), '146': array([0.50541818, 0.06445163]), '179': array([0.56695706, 0.23576097]), '199': array([0.48120725, 0.11717936]), '202': array([0.54979879, 0.30463186]), '253': array([0.52939349, 0.05353485]), '271': array([0.2964493 , 0.13324313]), '274': array([0.50258327, 0.11891497]), '297': array([0.55214548, 0.21318096]), '350': array([0.71272552, 0.11344901]), '374': array([ 0.57590628, -0.0697023 ]), '401': array([0.51520044, 0.06777009]), '435': array([0.3068181 , 0.16681269]), '461': array([0.17413567, 0.04360601]), '464': array([0.46157041, 0.120464  ]), '14': array([-0.86417371, -0.21049049]), '31': array([-0.92939472, -0.54967117]), '35': array([0.61683613, 0.27798212]), '42': array([-0.93408787, -0.21105291]), '46': array([-0.88184363, -0.13268335]), '49': array([-0.80835092, -0.28308412]), '55': array([-0.88789481, -0.22269689]), '87': array([ 0.58788997, -0.038909  ]), '91': array([0.62047315, 0.22365503]), '98': array([-0.85995293, -0.1798467 ]), '103': array([0.7163201 , 0.27902809]), '110': array([-0.79558885, -0.30772847]), '113': array([0.59994984, 0.17589834]), '114': array([0.7290659 , 0.20979269]), '115': array([0.73861545, 0.10591198]), '130': array([0.54707128, 0.4865728 ]), '136': array([0.62948352, 0.25684863]), '142': array([0.66199046, 0.09362815]), '147': array([0.66868228, 0.15659483]), '150': array([-0.81950039, -0.25695077]), '154': array([0.6408115 , 0.12327424]), '170': array([0.60993242, 0.22405222]), '173': array([0.56722939, 0.30680668]), '198': array([0.58313662, 0.13431799]), '201': array([-0.78207028, -0.24120067]), '214': array([0.74716151, 0.19334446]), '220': array([-0.82375133, -0.43121964]), '223': array([0.76100308, 0.02258908]), '235': array([-0.78002459, -0.26114771]), '239': array([-0.8519159 , -0.17597915]), '244': array([0.6268208 , 0.09765479]), '249': array([-0.09372255,  0.38889948]), '251': array([0.5978961 , 0.14546342]), '254': array([0.66469246, 0.22204424]), '265': array([0.59630215, 0.10876669]), '267': array([0.64092034, 0.13856429]), '273': array([-0.91395658,  0.0954638 ]), '278': array([-0.77883458, -0.23580374]), '280': array([ 0.73839033, -0.08076872]), '281': array([0.47547901, 0.2686505 ]), '285': array([0.55574864, 0.10016785]), '290': array([-0.88162851, -0.43974617]), '295': array([0.67653894, 0.15408406]), '300': array([-0.89537835, -0.14214207]), '302': array([ 0.53216493, -0.36344078]), '303': array([-0.89110363, -0.25629169]), '308': array([ 0.75186843, -0.05244206]), '311': array([-0.80267191, -0.10507166]), '312': array([-0.94814658, -0.250586  ]), '313': array([-0.8870427 , -0.07520522]), '316': array([-0.96530831, -0.15024851]), '317': array([-0.86656076, -0.15973403]), '326': array([-1.        ,  0.03903648]), '327': array([0.61335498, 0.19430518]), '330': array([-0.80770952, -0.19571131]), '331': array([ 0.51179481, -0.38665661]), '343': array([-0.93666708, -0.1134461 ]), '351': array([0.75562406, 0.01432719]), '352': array([0.66225398, 0.24989535]), '358': array([0.67613256, 0.09470308]), '369': array([0.69357407, 0.17938605]), '370': array([-0.81157178,  0.05213052]), '379': array([-0.91139436, -0.17084563]), '388': array([-0.7752068 , -0.24695462]), '396': array([0.54146385, 0.13847019]), '403': array([-0.80619651, -0.22997521]), '419': array([-0.90428197, -0.23294656]), '428': array([-0.75731856, -0.73180491]), '439': array([-0.80610186, -0.23842478]), '441': array([-0.91920328, -0.18287504]), '444': array([0.57137394, 0.40388969]), '459': array([-0.90893894, -0.23254375]), '466': array([-0.98204535, -0.03191818]), '475': array([-0.79889154, -0.29116058]), '477': array([-0.80952907, -0.19861281]), '478': array([-0.79578292, -0.30278796]), '493': array([ 0.56020832, -0.12832777]), '505': array([-0.66182208,  0.2641955 ]), '508': array([-0.8479023 , -0.21693678]), '513': array([-0.8739664 , -0.21023485]), '9': array([ 0.14830659, -0.1821501 ]), '240': array([0.1878733 , 0.07717817]), '405': array([-0.15810429, -0.85176194]), '161': array([ 0.45456889, -0.04079054]), '344': array([0.34217432, 0.0625006 ]), '378': array([0.38263479, 0.19518304]), '490': array([-0.25113094, -0.03423458]), '499': array([ 0.27392727, -0.05026377]), '502': array([ 0.16686447, -0.05159955]), '65': array([ 0.63635337, -0.23904516]), '66': array([0.59224862, 0.02712218]), '93': array([-0.50988674, -0.02562675]), '258': array([ 0.58910501, -0.05462158]), '390': array([ 0.55544293, -0.06079266]), '408': array([ 0.11209938, -0.05632037]), '416': array([0.56710899, 0.1857252 ]), '449': array([ 0.58765256, -0.08706155]), '465': array([ 0.64448315, -0.05029189]), '501': array([ 0.65356904, -0.17847955]), '12': array([0.69837219, 0.38247013]), '222': array([0.57555425, 0.51862913]), '349': array([0.60843968, 0.51760656]), '362': array([-0.80335689, -0.58584487]), '141': array([ 0.28244472, -0.27413145]), '262': array([ 0.29402459, -0.12112726]), '282': array([ 0.07597987, -0.74250865]), '293': array([0.17514929, 0.05919844]), '380': array([-0.75101781, -0.12845933]), '392': array([-0.40710291, -0.05333431]), '489': array([ 0.61152047, -0.12683253]), '195': array([ 0.68091887, -0.00345874]), '404': array([0.54181165, 0.47252026]), '15': array([0.40515345, 0.20964742]), '50': array([-0.69252455, -0.81661159]), '51': array([-0.78798944, -0.67849541]), '60': array([-0.68513423, -0.68632394]), '76': array([-0.83974367, -0.41954622]), '92': array([-0.77628863, -0.36590362]), '94': array([0.59768146, 0.35646167]), '118': array([-0.82275844, -0.300374  ]), '121': array([0.73565942, 0.09261201]), '151': array([-0.91144276, -0.33009523]), '152': array([-0.14316855,  0.04115109]), '176': array([0.67503279, 0.38038999]), '191': array([0.68072414, 0.19702251]), '243': array([-0.83562785, -0.6036768 ]), '294': array([0.60871226, 0.40702352]), '319': array([-0.84191406, -0.37156966]), '407': array([0.70275974, 0.25536561]), '458': array([0.54277408, 0.34296453]), '467': array([-0.89073092, -0.32518861]), '486': array([0.54073018, 0.32707405]), '512': array([-0.78340989, -0.47628132]), '17': array([0.58467484, 0.3386232 ]), '28': array([0.28819939, 0.86858374]), '59': array([0.57777053, 0.49812588]), '88': array([-0.80731118, -0.42577466]), '119': array([0.56698781, 0.33042046]), '149': array([0.5660376 , 0.43307862]), '207': array([0.24224021, 0.06957866]), '227': array([0.36103925, 0.31785011]), '353': array([0.55200899, 0.37845892]), '376': array([0.58512998, 0.45280612]), '423': array([0.58707672, 0.58402419]), '424': array([-0.63134408, -0.44900364]), '448': array([0.62185246, 0.24412867]), '454': array([0.64133942, 0.447543  ]), '463': array([0.45224518, 0.4045715 ]), '483': array([0.47573388, 0.32825387]), '509': array([-0.81018507, -0.512546  ]), '26': array([-0.72542757, -0.63286525]), '52': array([-0.58608276, -0.57997048]), '81': array([0.5128094 , 0.51263994]), '167': array([0.6169889 , 0.43187121]), '215': array([-0.6230135 , -0.57133627]), '334': array([-0.6940273 , -0.70460439]), '342': array([-0.75207269, -0.71530503]), '354': array([0.38707864, 0.47781196]), '420': array([0.49097073, 0.72104758]), '426': array([-0.73499036, -0.59290403]), '429': array([0.59560972, 0.78911042]), '445': array([-0.63122833, -0.89756906]), '446': array([-0.71474528, -0.56367767]), '485': array([0.43050739, 0.76224476]), '506': array([-0.84514344, -0.64675331]), '100': array([0.68987072, 0.10591242]), '172': array([-0.02737139,  0.73370844]), '181': array([0.57474285, 0.04091354]), '340': array([0.67407066, 0.15359215]), '347': array([0.65552062, 0.02441612]), '382': array([0.64227951, 0.17755847]), '422': array([0.64233559, 0.1793431 ]), '437': array([0.58737326, 0.29747617]), '64': array([0.51310927, 0.46875063]), '85': array([-0.78320801, -0.38161877]), '112': array([0.51728225, 0.32490343]), '144': array([0.42870969, 0.43997416]), '168': array([-0.49604645, -0.61141133]), '171': array([-0.70505595, -0.58501381]), '174': array([0.50630134, 0.45251614]), '231': array([0.47985983, 0.42271924]), '272': array([0.58312935, 0.39847669]), '279': array([-0.74057275, -0.46038443]), '345': array([-0.7852999 , -0.66971135]), '391': array([ 0.54801917, -0.05273676]), '400': array([0.58685184, 0.30873069]), '411': array([0.55928272, 0.42988193]), '417': array([0.55508882, 0.45457059]), '456': array([0.51825202, 0.41923031]), '481': array([-0.87091553, -0.27061632]), '496': array([0.60526121, 0.11834363]), '497': array([0.51639658, 0.21539462]), '21': array([0.55079919, 0.50944096]), '22': array([0.60734749, 0.75647026]), '306': array([-0.63820761, -0.64389724]), '314': array([-0.5669241 , -0.52536696]), '359': array([0.10013883, 0.07682078]), '276': array([-0.49414012, -0.74993688]), '289': array([-0.84582078, -0.51057708]), '418': array([0.5349071 , 0.57521844]), '469': array([-0.77503264, -0.58381146]), '62': array([0.61043954, 0.00995994]), '74': array([0.54670262, 0.17343907]), '158': array([0.62975854, 0.04328213]), '255': array([0.12449801, 0.12322126]), '473': array([0.57024264, 0.09931074]), '363': array([0.27251735, 0.01125416]), '25': array([ 0.08019619, -0.02282236]), '41': array([0.40071973, 0.57319748]), '72': array([-0.38140216, -0.3784028 ]), '102': array([0.39348671, 0.5918324 ]), '203': array([-0.67032546, -0.67390937]), '333': array([-0.36033335, -0.74102849]), '245': array([0.50185955, 0.46234205]), '264': array([-0.64021415, -0.5575034 ]), '286': array([-0.63178486, -0.56406277]), '321': array([-0.82330918, -0.53101671]), '346': array([-0.78132617, -0.57311296]), '393': array([-0.81235784, -0.5448187 ]), '462': array([-0.66993243, -0.57922435]), '29': array([ 0.41791275, -0.03917278]), '80': array([0.48634768, 0.06602443]), '97': array([0.47423601, 0.0811514 ]), '134': array([0.48583654, 0.14130463]), '218': array([ 0.58347428, -0.12682235]), '230': array([0.47430611, 0.07726713]), '256': array([0.45761096, 0.0230067 ]), '386': array([0.50202888, 0.03940015]), '394': array([ 0.59088546, -0.01716257]), '406': array([0.53597426, 0.09561567]), '436': array([0.46423501, 0.1053226 ]), '507': array([0.52880466, 0.1543171 ]), '32': array([-0.02432217, -0.91826046]), '69': array([-0.81957603, -0.23141761]), '194': array([-0.06896747,  0.42149913]), '365': array([-0.22219624,  0.2291695 ]), '47': array([0.43561941, 0.01431862]), '145': array([-0.09603523,  0.05852872]), '479': array([0.5215283 , 0.11380833]), '217': array([0.58354825, 0.07930713]), '298': array([0.40118697, 0.12550503]), '129': array([-0.73188168, -0.45704713]), '257': array([-0.76109743, -0.54184347]), '307': array([0.57475978, 0.54830188]), '431': array([0.54223347, 0.44825462]), '482': array([-0.41653499, -0.1928367 ]), '63': array([0.53935754, 0.13381958]), '124': array([0.31044215, 0.12205215]), '34': array([-0.8814916 , -0.58480614]), '53': array([0.52079546, 0.48867992]), '192': array([0.52293295, 0.51184821]), '143': array([0.46264297, 0.52889854]), '356': array([-0.61986744, -0.5001418 ]), '287': array([0.4168227 , 0.59652507]), '381': array([0.54997623, 0.1234979 ]), '412': array([0.17402942, 0.18256901]), '37': array([0.57916176, 0.42764044]), '164': array([-0.13953657, -0.17725524]), '368': array([-0.36934024, -0.89013773]), '70': array([0.5318802 , 0.16630262]), '106': array([-0.37224713, -0.03257523]), '48': array([-0.31923684, -0.05330843]), '159': array([-0.30716127, -0.03476517]), '260': array([-0.24676724, -0.03828939]), '438': array([-0.24404874, -0.01395893]), '442': array([-0.21900876, -0.04349576]), '484': array([-0.29175028, -0.39469644]), '471': array([0.51408523, 0.52866757]), '185': array([0.46521819, 0.42285362]), '237': array([0.49619234, 0.47588673]), '488': array([0.41828102, 0.35382164]), '500': array([0.48099017, 0.41679695]), '339': array([-0.78280044, -0.30605829]), '58': array([0.25497136, 0.20217679]), '299': array([0.53677344, 0.51454133]), '204': array([-0.85932177,  0.0179286 ]), '210': array([-0.39165193, -0.24240357]), '372': array([0.54573029, 0.2236432 ]), '252': array([-0.417541  , -0.27984059]), '414': array([-0.66051978, -0.52369273]), '165': array([0.74528342, 0.04334579]), '79': array([0.44713736, 0.61377752]), '101': array([0.49030656, 0.47609144]), '196': array([0.20244959, 0.76137799]), '415': array([-0.53160268, -0.63243937]), '82': array([-0.59157646, -0.48626897]), '208': array([-0.0608081 , -0.24042003]), '250': array([0.06228257, 0.05660887]), '188': array([ 0.45999771, -0.16641538]), '226': array([-0.24292302,  0.01856659]), '476': array([-0.35972312,  0.00549883]), '472': array([ 0.48551342, -0.00645156]), '155': array([0.50443566, 0.43611386]), '140': array([0.27971247, 0.52872133]), '128': array([0.64046144, 0.33433557]), '157': array([ 0.27293724, -0.64588296]), '421': array([ 0.25495848, -0.26977089]), '304': array([0.57523048, 0.45313036]), '453': array([-0.4205099 ,  0.27665702]), '397': array([ 0.38861158, -0.02250502]), '225': array([-0.64843684, -0.41231087]), '360': array([-0.20855887,  0.49096301])}
# node = []
# for i in range(len(pos)):
#     if pos[str(i)][0] > -0.096:
#         node.append([str(i), '0'])
#     else:
#         node.append([str(i), '1'])
# f = open(path5, 'w', encoding='utf-8')
# for i in node:
#     f.writelines([i[0], '\t', i[1], '\n'])
# f.close()

'''检测蝴蝶结构'''
# with open(path3, "r") as f:
#     data = f.readlines()
# A = 0
# B = 0
# C = 0
# D = 0
# E = 0
# F = 0
# N = 157
# M = 348
# dic = np.zeros((N, M))
# for i in data:
#     # dic.setdefault(int(i.split('\t')[0]), [])
#     # dic[int(i.split('\t')[0])].append(fh(i.split('\t')[2][:-1]))
#     dic[int(i.split('\t')[0]), int(i.split('\t')[1])] = fh(i.split('\t')[2][:-1])
# for k in range(M - 1):
#     for v in range(k + 1, M):
#         for i in range(N - 1):
#             if dic[i, k] == 0 or dic[i, v] == 0:
#                 continue
#             else:
#                 for j in range(i + 1, N):
#                     if dic[j, v] == 0 or dic[j, k] == 0:
#                         continue
#                     else:
#                         die = [dic[i, k], dic[j, k], dic[j, v], dic[i, v]]
#                         if die == [1, 1, 1, 1]:
#                             A += 1
#                         elif die == [-1, -1, -1, -1]:
#                             B += 1
#                         elif die.count(-1) == 2 and die.count(1) == 2:
#                             C += 1
#                         elif die.count(-1) == 1 and die.count(1) == 3:
#                             D += 1
#                         elif die.count(-1) == 3 and die.count(1) == 1:
#                             E += 1
#     print(k)
#     #     SUM = A + B + C + D + E + F + G
#     #     if (D+E)/SUM < 0.3:
#     #         # print(k, '\t', v, '\t', (D+E)/SUM)
#     #         ph += (D+E)/SUM
#     #         cs += 1
#     # if cs == 0:
#     #     print(k, '\t', ph)
#     # else:
#     #     print(k, '\t', ph/cs)
# SUM = A+B+C+D+E
# print(A, B, C, D, E)
# print(SUM, D+E, (D+E)/SUM)
